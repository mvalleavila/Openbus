<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.6" jmeter="2.11 r1554548">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">2</stringProp>
        <longProp name="ThreadGroup.start_time">1392386374000</longProp>
        <longProp name="ThreadGroup.end_time">1392386374000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">true</boolProp>
          <intProp name="ThroughputController.maxThroughput">5</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>10.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler - Active Checks 0" enabled="true">
            <stringProp name="TCPSampler.server">127.0.0.1</stringProp>
            <boolProp name="TCPSampler.reUseConnection">true</boolProp>
            <stringProp name="TCPSampler.port">8000</stringProp>
            <boolProp name="TCPSampler.nodelay">false</boolProp>
            <stringProp name="TCPSampler.timeout"></stringProp>
            <stringProp name="TCPSampler.request">{
	&quot;request&quot;:&quot;active checks&quot;,
	&quot;host&quot;:&quot;Zabbix server&quot;}</stringProp>
            <boolProp name="TCPSampler.closeConnection">true</boolProp>
            <stringProp name="TCPSampler.EolByte">-1</stringProp>
            <stringProp name="ConfigTestElement.username"></stringProp>
            <stringProp name="ConfigTestElement.password"></stringProp>
          </TCPSampler>
          <hashTree/>
          <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler - Active Checks 1" enabled="false">
            <stringProp name="TCPSampler.server">127.0.0.1</stringProp>
            <boolProp name="TCPSampler.reUseConnection">true</boolProp>
            <stringProp name="TCPSampler.port">8001</stringProp>
            <boolProp name="TCPSampler.nodelay">false</boolProp>
            <stringProp name="TCPSampler.timeout"></stringProp>
            <stringProp name="TCPSampler.request">{
	&quot;request&quot;:&quot;active checks&quot;,
	&quot;host&quot;:&quot;Jmeter&quot;}</stringProp>
            <boolProp name="TCPSampler.closeConnection">true</boolProp>
            <stringProp name="TCPSampler.EolByte">-1</stringProp>
            <stringProp name="ConfigTestElement.username"></stringProp>
            <stringProp name="ConfigTestElement.password"></stringProp>
          </TCPSampler>
          <hashTree/>
          <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler - Active Checks 2" enabled="true">
            <stringProp name="TCPSampler.server">127.0.0.1</stringProp>
            <boolProp name="TCPSampler.reUseConnection">true</boolProp>
            <stringProp name="TCPSampler.port">8002</stringProp>
            <boolProp name="TCPSampler.nodelay">false</boolProp>
            <stringProp name="TCPSampler.timeout"></stringProp>
            <stringProp name="TCPSampler.request">{
	&quot;request&quot;:&quot;active checks&quot;,
	&quot;host&quot;:&quot;Zabbix server&quot;}</stringProp>
            <boolProp name="TCPSampler.closeConnection">true</boolProp>
            <stringProp name="TCPSampler.EolByte">-1</stringProp>
            <stringProp name="ConfigTestElement.username"></stringProp>
            <stringProp name="ConfigTestElement.password"></stringProp>
          </TCPSampler>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">true</boolProp>
          <intProp name="ThroughputController.maxThroughput">90</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>90.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler - Agent Data No Response" enabled="false">
            <stringProp name="TCPSampler.server">127.0.0.1</stringProp>
            <boolProp name="TCPSampler.reUseConnection">false</boolProp>
            <stringProp name="TCPSampler.port">8000</stringProp>
            <boolProp name="TCPSampler.nodelay">false</boolProp>
            <stringProp name="TCPSampler.timeout"></stringProp>
            <stringProp name="TCPSampler.request">ZBXD{
	&quot;request&quot;:&quot;agent data&quot;,
	&quot;data&quot;:[
		{
			&quot;host&quot;:&quot;Zabbix server&quot;,
			&quot;key&quot;:&quot;system.swap.size[,free]&quot;,
			&quot;value&quot;:&quot;2054017024&quot;,
			&quot;clock&quot;:1392324747,
			&quot;ns&quot;:682455741}],
	&quot;clock&quot;:1392324747,
	&quot;ns&quot;:682473612}</stringProp>
            <boolProp name="TCPSampler.closeConnection">true</boolProp>
            <stringProp name="TCPSampler.EolByte">-1</stringProp>
            <stringProp name="ConfigTestElement.username"></stringProp>
            <stringProp name="ConfigTestElement.password"></stringProp>
          </TCPSampler>
          <hashTree/>
          <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler - Agent Data 0" enabled="true">
            <stringProp name="TCPSampler.server">127.0.0.1</stringProp>
            <boolProp name="TCPSampler.reUseConnection">true</boolProp>
            <stringProp name="TCPSampler.port">8000</stringProp>
            <boolProp name="TCPSampler.nodelay">false</boolProp>
            <stringProp name="TCPSampler.timeout"></stringProp>
            <stringProp name="TCPSampler.request">{
	&quot;request&quot;:&quot;agent data&quot;,
	&quot;data&quot;:[
		{
			&quot;host&quot;:&quot;Zabbix server&quot;,
			&quot;key&quot;:&quot;system.swap.size[,pfree]&quot;,
			&quot;value&quot;:&quot;97.166214&quot;,
			&quot;clock&quot;:1392324747,
			&quot;ns&quot;:686241075},
		{
			&quot;host&quot;:&quot;Zabbix server&quot;,
			&quot;key&quot;:&quot;system.localtime&quot;,
			&quot;value&quot;:&quot;1392324747&quot;,
			&quot;clock&quot;:1392324747,
			&quot;ns&quot;:686253235},
		{
			&quot;host&quot;:&quot;Zabbix server&quot;,
			&quot;key&quot;:&quot;system.cpu.intr&quot;,
			&quot;value&quot;:&quot;27642493&quot;,
			&quot;clock&quot;:1392324747,
			&quot;ns&quot;:686382771},
		{
			&quot;host&quot;:&quot;Zabbix server&quot;,
			&quot;key&quot;:&quot;system.users.num&quot;,
			&quot;value&quot;:&quot;2&quot;,
			&quot;clock&quot;:1392324747,
			&quot;ns&quot;:694425161},
		{
			&quot;host&quot;:&quot;Zabbix server&quot;,
			&quot;key&quot;:&quot;proc.num[]&quot;,
			&quot;value&quot;:&quot;210&quot;,
			&quot;clock&quot;:1392324747,
			&quot;ns&quot;:699012745},
		{
			&quot;host&quot;:&quot;Zabbix server&quot;,
			&quot;key&quot;:&quot;proc.num[,,run]&quot;,
			&quot;value&quot;:&quot;1&quot;,
			&quot;clock&quot;:1392324747,
			&quot;ns&quot;:713640722},
		{
			&quot;host&quot;:&quot;Zabbix server&quot;,
			&quot;key&quot;:&quot;system.cpu.load[percpu,avg1]&quot;,
			&quot;value&quot;:&quot;0.040000&quot;,
			&quot;clock&quot;:1392324747,
			&quot;ns&quot;:713726649},
		{
			&quot;host&quot;:&quot;Zabbix server&quot;,
			&quot;key&quot;:&quot;system.cpu.util[,system]&quot;,
			&quot;value&quot;:&quot;0.403565&quot;,
			&quot;clock&quot;:1392324747,
			&quot;ns&quot;:713743297},
		{
			&quot;host&quot;:&quot;Zabbix server&quot;,
			&quot;key&quot;:&quot;system.cpu.util[,iowait]&quot;,
			&quot;value&quot;:&quot;0.739869&quot;,
			&quot;clock&quot;:1392324747,
			&quot;ns&quot;:713748887},
		{
			&quot;host&quot;:&quot;Zabbix server&quot;,
			&quot;key&quot;:&quot;system.cpu.util[,nice]&quot;,
			&quot;value&quot;:&quot;0.000000&quot;,
			&quot;clock&quot;:1392324747,
			&quot;ns&quot;:713753393}],
	&quot;clock&quot;:1392324747,
	&quot;ns&quot;:713778640}</stringProp>
            <boolProp name="TCPSampler.closeConnection">true</boolProp>
            <stringProp name="TCPSampler.EolByte">-1</stringProp>
            <stringProp name="ConfigTestElement.username"></stringProp>
            <stringProp name="ConfigTestElement.password"></stringProp>
          </TCPSampler>
          <hashTree/>
          <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler - Agent Data 1" enabled="false">
            <stringProp name="TCPSampler.server">127.0.0.1</stringProp>
            <boolProp name="TCPSampler.reUseConnection">true</boolProp>
            <stringProp name="TCPSampler.port">8001</stringProp>
            <boolProp name="TCPSampler.nodelay">false</boolProp>
            <stringProp name="TCPSampler.timeout"></stringProp>
            <stringProp name="TCPSampler.request">{
	&quot;request&quot;:&quot;agent data&quot;,
	&quot;data&quot;:[
		{
			&quot;host&quot;:&quot;Jmeter&quot;,
			&quot;key&quot;:&quot;system.swap.size[,pfree]&quot;,
			&quot;value&quot;:&quot;97.166214&quot;,
			&quot;clock&quot;:1392324747,
			&quot;ns&quot;:686241075},
		{
			&quot;host&quot;:&quot;Jmeter&quot;,
			&quot;key&quot;:&quot;system.localtime&quot;,
			&quot;value&quot;:&quot;1392324747&quot;,
			&quot;clock&quot;:1392324747,
			&quot;ns&quot;:686253235},
		{
			&quot;host&quot;:&quot;Jmeter&quot;,
			&quot;key&quot;:&quot;system.cpu.intr&quot;,
			&quot;value&quot;:&quot;27642493&quot;,
			&quot;clock&quot;:1392324747,
			&quot;ns&quot;:686382771},
		{
			&quot;host&quot;:&quot;Jmeter&quot;,
			&quot;key&quot;:&quot;system.users.num&quot;,
			&quot;value&quot;:&quot;2&quot;,
			&quot;clock&quot;:1392324747,
			&quot;ns&quot;:694425161},
		{
			&quot;host&quot;:&quot;Jmeter&quot;,
			&quot;key&quot;:&quot;proc.num[]&quot;,
			&quot;value&quot;:&quot;210&quot;,
			&quot;clock&quot;:1392324747,
			&quot;ns&quot;:699012745},
		{
			&quot;host&quot;:&quot;Jmeter&quot;,
			&quot;key&quot;:&quot;proc.num[,,run]&quot;,
			&quot;value&quot;:&quot;1&quot;,
			&quot;clock&quot;:1392324747,
			&quot;ns&quot;:713640722},
		{
			&quot;host&quot;:&quot;Jmeter&quot;,
			&quot;key&quot;:&quot;system.cpu.load[percpu,avg1]&quot;,
			&quot;value&quot;:&quot;0.040000&quot;,
			&quot;clock&quot;:1392324747,
			&quot;ns&quot;:713726649},
		{
			&quot;host&quot;:&quot;Jmeter&quot;,
			&quot;key&quot;:&quot;system.cpu.util[,system]&quot;,
			&quot;value&quot;:&quot;0.403565&quot;,
			&quot;clock&quot;:1392324747,
			&quot;ns&quot;:713743297},
		{
			&quot;host&quot;:&quot;Jmeter&quot;,
			&quot;key&quot;:&quot;system.cpu.util[,iowait]&quot;,
			&quot;value&quot;:&quot;0.739869&quot;,
			&quot;clock&quot;:1392324747,
			&quot;ns&quot;:713748887},
		{
			&quot;host&quot;:&quot;Jmeter&quot;,
			&quot;key&quot;:&quot;system.cpu.util[,nice]&quot;,
			&quot;value&quot;:&quot;0.000000&quot;,
			&quot;clock&quot;:1392324747,
			&quot;ns&quot;:713753393}],
	&quot;clock&quot;:1392324747,
	&quot;ns&quot;:713778640}</stringProp>
            <boolProp name="TCPSampler.closeConnection">true</boolProp>
            <stringProp name="TCPSampler.EolByte">-1</stringProp>
            <stringProp name="ConfigTestElement.username"></stringProp>
            <stringProp name="ConfigTestElement.password"></stringProp>
          </TCPSampler>
          <hashTree/>
          <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler - Agent Data 2" enabled="true">
            <stringProp name="TCPSampler.server">127.0.0.1</stringProp>
            <boolProp name="TCPSampler.reUseConnection">true</boolProp>
            <stringProp name="TCPSampler.port">8002</stringProp>
            <boolProp name="TCPSampler.nodelay">false</boolProp>
            <stringProp name="TCPSampler.timeout"></stringProp>
            <stringProp name="TCPSampler.request">{
	&quot;request&quot;:&quot;agent data&quot;,
	&quot;data&quot;:[
		{
			&quot;host&quot;:&quot;Zabbix server&quot;,
			&quot;key&quot;:&quot;system.swap.size[,pfree]&quot;,
			&quot;value&quot;:&quot;97.166214&quot;,
			&quot;clock&quot;:1392324747,
			&quot;ns&quot;:686241075},
		{
			&quot;host&quot;:&quot;Zabbix server&quot;,
			&quot;key&quot;:&quot;system.localtime&quot;,
			&quot;value&quot;:&quot;1392324747&quot;,
			&quot;clock&quot;:1392324747,
			&quot;ns&quot;:686253235},
		{
			&quot;host&quot;:&quot;Zabbix server&quot;,
			&quot;key&quot;:&quot;system.cpu.intr&quot;,
			&quot;value&quot;:&quot;27642493&quot;,
			&quot;clock&quot;:1392324747,
			&quot;ns&quot;:686382771},
		{
			&quot;host&quot;:&quot;Zabbix server&quot;,
			&quot;key&quot;:&quot;system.users.num&quot;,
			&quot;value&quot;:&quot;2&quot;,
			&quot;clock&quot;:1392324747,
			&quot;ns&quot;:694425161},
		{
			&quot;host&quot;:&quot;Zabbix server&quot;,
			&quot;key&quot;:&quot;proc.num[]&quot;,
			&quot;value&quot;:&quot;210&quot;,
			&quot;clock&quot;:1392324747,
			&quot;ns&quot;:699012745},
		{
			&quot;host&quot;:&quot;Zabbix server&quot;,
			&quot;key&quot;:&quot;proc.num[,,run]&quot;,
			&quot;value&quot;:&quot;1&quot;,
			&quot;clock&quot;:1392324747,
			&quot;ns&quot;:713640722},
		{
			&quot;host&quot;:&quot;Zabbix server&quot;,
			&quot;key&quot;:&quot;system.cpu.load[percpu,avg1]&quot;,
			&quot;value&quot;:&quot;0.040000&quot;,
			&quot;clock&quot;:1392324747,
			&quot;ns&quot;:713726649},
		{
			&quot;host&quot;:&quot;Zabbix server&quot;,
			&quot;key&quot;:&quot;system.cpu.util[,system]&quot;,
			&quot;value&quot;:&quot;0.403565&quot;,
			&quot;clock&quot;:1392324747,
			&quot;ns&quot;:713743297},
		{
			&quot;host&quot;:&quot;Zabbix server&quot;,
			&quot;key&quot;:&quot;system.cpu.util[,iowait]&quot;,
			&quot;value&quot;:&quot;0.739869&quot;,
			&quot;clock&quot;:1392324747,
			&quot;ns&quot;:713748887},
		{
			&quot;host&quot;:&quot;Zabbix server&quot;,
			&quot;key&quot;:&quot;system.cpu.util[,nice]&quot;,
			&quot;value&quot;:&quot;0.000000&quot;,
			&quot;clock&quot;:1392324747,
			&quot;ns&quot;:713753393}],
	&quot;clock&quot;:1392324747,
	&quot;ns&quot;:713778640}</stringProp>
            <boolProp name="TCPSampler.closeConnection">true</boolProp>
            <stringProp name="TCPSampler.EolByte">-1</stringProp>
            <stringProp name="ConfigTestElement.username"></stringProp>
            <stringProp name="ConfigTestElement.password"></stringProp>
          </TCPSampler>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
